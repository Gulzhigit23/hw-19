[{"C:\\Users\\user\\Downloads\\form-control\\src\\index.js":"1","C:\\Users\\user\\Downloads\\form-control\\src\\App.jsx":"2","C:\\Users\\user\\Downloads\\form-control\\src\\components\\BasicForm.jsx":"3","C:\\Users\\user\\Downloads\\form-control\\src\\components\\SimpleInput.jsx":"4"},{"size":142,"mtime":1668428843000,"results":"5","hashOfConfig":"6"},{"size":251,"mtime":1668499079297,"results":"7","hashOfConfig":"6"},{"size":2454,"mtime":1668502654432,"results":"8","hashOfConfig":"6"},{"size":1885,"mtime":1668498954698,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9hlem",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"C:\\Users\\user\\Downloads\\form-control\\src\\index.js",[],"C:\\Users\\user\\Downloads\\form-control\\src\\App.jsx",["21"],"import BasicForm from \"./components/BasicForm\";\nimport SimpleInput from \"./components/SimpleInput\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* <SimpleInput /> */}\n      <BasicForm />\n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Downloads\\form-control\\src\\components\\BasicForm.jsx",[],"C:\\Users\\user\\Downloads\\form-control\\src\\components\\SimpleInput.jsx",["22"],"import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n\n  const [nameIsValid, setNameIsValid] = useState(true);\n\n  const [name, setName] = useState(\"\");\n\n  const [isTouched, setIsTouched] = useState(true);\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    // const enteredName = nameInputRef.current.value;\n\n    // setNameIsValid(true);\n\n    // if (enteredName.trim().length < 5) {\n    //   setNameIsValid(false);\n    //   console.log(\"DELAI\");\n    //   return;\n    // }\n\n    // console.log(enteredName);\n\n    // nameInputRef.current.value = \"  \";\n  };\n\n  const onBlurHandler = () => {\n    const enteredName = nameInputRef.current.value;\n    console.log(\"Losing focus\");\n    setNameIsValid(true);\n    setIsTouched(true);\n\n    if (enteredName.trim().length < 5) {\n      setNameIsValid(false);\n      setIsTouched(false);\n      return;\n    }\n  };\n\n  const onChangeHandler = (e) => {\n    setName(e.target.value);\n    setNameIsValid(true);\n    setIsTouched(true);\n    const enteredName = nameInputRef.current.value;\n    if (enteredName.trim().length < 5) {\n      setNameIsValid(false);\n      setIsTouched(false);\n      return;\n    }\n  };\n\n  const nameInputClasses = nameIsValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          ref={nameInputRef}\n          onBlur={onBlurHandler}\n          onChange={onChangeHandler}\n        />\n        {!nameIsValid && (\n          <p className=\"error-text\">Name should be more 5 character</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!isTouched}>Submit</button>\n      </div>\n      \n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["23","24"],{"ruleId":"25","severity":1,"message":"26","line":2,"column":8,"nodeType":"27","messageId":"28","endLine":2,"endColumn":19},{"ruleId":"25","severity":1,"message":"29","line":8,"column":10,"nodeType":"27","messageId":"28","endLine":8,"endColumn":14},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-global-assign","no-unsafe-negation"]